# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

env:
  WORKDIR: /home/ubuntu/simple-server

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  platform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/chechout@v3
      
      - name: Set AWS Creds
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Terraform install
        run: apt install -y terraform
        
      - name: Run terraform apply
        run: terraform apply -auto-approve
        
      - name: Set Instance IP as Environment Variable
        run: |
          instance_ip=$(terraform output PUBLIC_IPV4)
          echo "INSTANCE_IP=$instance_ip" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -o ${{ github.event.repository.name }}

    - name: Test
      run: go test -v ./...
      
    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        source: "./public,./templates,./${{ github.event.repository.name }}"
        target: ${{ env.WORKDIR }}
        
        
  run:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Use IP Address from Environment Variable
        run: |
          instance_ip=$INSTANCE_IP
          
      - name: Set and Run
        uses: appleboy/ssh-action@master
        with:
          host: $instance_ip
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ${{ env.WORKDIR }}
            sudo systemctl restart ${{ github.event.repository.name }}